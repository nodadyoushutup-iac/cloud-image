name: Build and Release Image

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      version:
        description: "Semantic version tag for the release"
        required: true
      file_name:
        description: "File name"
        required: true
        default: cloud-image-x86-64-jammy
        type: choice
        options:
          - cloud-image-x86-64-jammy

env:
  PACKER_LOG: 1
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VERSION: "${{ github.event.inputs.version }}"
  FILE_NAME: ${{ github.event.inputs.file_name }}
  CLOUD_REPOSITORY_URL: ${{ secrets.CLOUD_REPOSITORY_URL }}

permissions:
  contents: write

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Set environment variable with modified version
        id: set_file_name
        run: |
          MODIFIED_FILE_NAME="${{ github.event.inputs.file_name }}-${{ github.event.inputs.version }}"
          echo "FILE_NAME=$MODIFIED_FILE_NAME" >> $GITHUB_ENV

      - name: Show resulting file name
        run: |
          echo "Final FILE_NAME: $FILE_NAME"

      - name: Checkout repository
        id: checkout_build
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - name: Install packages
      #   id: apt_install
      #   run: |
      #     sudo apt-get update && sudo apt-get install -y jq qemu-system xorriso unzip

      - name: Packer setup
        uses: hashicorp/setup-packer@main
        id: packer_setup
        with:
          version: "latest"

      - name: Packer init
        id: packer_init
        run: |
          packer init cloud_image.pkr.hcl

      - name: Packer validate
        id: packer_validate
        run: |
          packer validate cloud_image.pkr.hcl

      - name: Packer build
        id: packer_build
        run: |
          packer build \
          -var="output_dir=output" \
          -var="file_name=${{ env.FILE_NAME }}" \
          cloud_image.pkr.hcl

      - name: Generate checksum
        id: generate_checksum
        run: |
          mkdir -p "output"
          sha256sum "output/${{ env.FILE_NAME }}.img" > "output/${{ env.FILE_NAME }}.img.sha256"

      - name: Upload artifacts to workspace
        uses: actions/upload-artifact@v4
        id: artifact_upload
        with:
          name: artifact
          path: |
            output/${{ env.FILE_NAME }}.img
            output/${{ env.FILE_NAME }}.img.sha256

      - name: Upload image to cloud repository
        id: upload_img
        run: |
          response=$(curl -s -H "CLOUD-REPOSITORY-APIKEY: ${{ secrets.CLOUD_REPOSITORY_APIKEY }}" \
                       -F "file=@output/${{ env.FILE_NAME }}.img" \
                       ${{ env.CLOUD_REPOSITORY_URL }}/upload)
          echo "response=$response" >> "$GITHUB_OUTPUT"

      - name: Parse upload response
        id: parse_response
        run: |
          IMAGE_PATH=$(echo '${{ steps.upload_img.outputs.response }}' | jq -r '.path')
          SHA256_PATH=$(echo '${{ steps.upload_img.outputs.response }}' | jq -r '.sha256_file')
          IMAGE_SHA=$(echo '${{ steps.upload_img.outputs.response }}' | jq -r '.sha256')
          IMAGE_URL="${{ env.CLOUD_REPOSITORY_URL }}/$IMAGE_PATH"
          SHA256_URL="${{ env.CLOUD_REPOSITORY_URL }}/$SHA256_PATH"
          echo "image_url=$IMAGE_URL" >> "$GITHUB_OUTPUT"
          echo "sha_url=$SHA256_URL" >> "$GITHUB_OUTPUT"
          echo "sha=$IMAGE_SHA" >> "$GITHUB_OUTPUT"
          cat <<EOF > release_notes.txt
Image URL: $IMAGE_URL
Checksum URL: $SHA256_URL
SHA256: $IMAGE_SHA
EOF

      - name: Create GitHub release
        id: release_create
        run: |
          echo "Creating release for tag: ${{ env.VERSION }}"
          gh release create "${{ env.VERSION }}" \
            --title "${{ env.VERSION }}" \
            --notes-file release_notes.txt
